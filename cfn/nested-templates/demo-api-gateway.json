{
 "Metadata": {
  "AWS::CloudFormation::Interface": {
   "ParameterGroups": [],
   "ParameterLabels": {}
  },
  "Comments": "",
  "CreatedBy": "Carter Meyers (AWS)",
  "Description": "This template provisions the demo API Gateway",
  "LastUpdated": "May 18, 2024",
  "Version": "v1.9"
 },
 "Outputs": {
  "ApiRootResourceId": {
   "Condition": "",
   "Value": {
    "Fn::GetAtt": [
     "Api",
     "RootResourceId"
    ]
   }
  },
  "CognitoAuthorizerId": {
   "Condition": "",
   "Value": {
    "Fn::GetAtt": [
     "CognitoAuthorizer",
     "AuthorizerId"
    ]
   }
  },
  "DemoAppApiId": {
   "Condition": "",
   "Value": {
    "Ref": "Api"
   }
  }
 },
 "Parameters": {
  "CodeDownloadUrl": {
   "Default": "https://github.com/aws-solutions-library-samples/guidance-for-architecting-resilient-database-with-amazon-aurora-on-aws/archive/refs/heads/main.zip",
   "Description": "The URL from which the supporting codebase can be downloaded. This codebase is used to deploy the demo dashboard.",
   "Type": "String"
  },
  "DatabaseAdminPassword": {
   "Description": "The password to be used for the RDS Aurora admin account.",
   "NoEcho": true,
   "Type": "String"
  },
  "DatabaseAdminUsername": {
   "Default": "AuroraAdmin",
   "Description": "The username to be used for the RDS Aurora admin account.",
   "Type": "String"
  },
  "DemoDashboardUserEmail": {
   "Description": "The email address you'll use to log into the dashboard. This is required if \"Deploy Demo Dashboard\" is set to \"Yes\".",
   "Type": "String"
  },
  "DeployDemoDashboard": {
   "AllowedValues": [
    "No",
    "Yes"
   ],
   "Default": "Yes",
   "Description": "Would you like a demo application deployed along side this solution that will allow you to test the failover? INFO: Because of WAF service requirements, demo WAF and CloudFront resources will be deployed to us-east-1, regardless of which region you deploy this stack to.",
   "Type": "String"
  },
  "GitHubGhSessionValue": {
   "Description": "The value of your GitHub \"_gh_sess\" cookie. This parameter will be removed when the solution's GitHub repo is made public.",
   "Type": "String"
  },
  "GitHubUserSessionValue": {
   "Description": "The value of your GitHub \"user_session\" cookie. This parameter will be removed when the solution's GitHub repo is made public.",
   "Type": "String"
  },
  "LambdaLayerArn": {
   "Type": "String"
  },
  "MainStackName": {
   "Type": "String"
  },
  "PrivateSubnetZoneACidr": {
   "Default": "10.10.1.0/24",
   "Description": "The CIDR range you wish to use for your primary private subnet.",
   "Type": "String"
  },
  "PrivateSubnetZoneBCidr": {
   "Default": "10.10.3.0/24",
   "Description": "The CIDR range you wish to use for your failover private subnet.",
   "Type": "String"
  },
  "PublicSubnetZoneACidr": {
   "Default": "10.10.0.0/24",
   "Description": "The CIDR range you wish to use for your primary public subnet.",
   "Type": "String"
  },
  "PublicSubnetZoneBCidr": {
   "Default": "10.10.2.0/24",
   "Description": "The CIDR range you wish to use for your failover public subnet.",
   "Type": "String"
  },
  "RegionalWafAclArn": {
   "Type": "String"
  },
  "VpcCidr": {
   "Default": "10.10.0.0/21",
   "Description": "The CIDR range you wish to use for your VPC.",
   "Type": "String"
  }
 },
 "Resources": {
  "Api": {
   "Properties": {
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "Name": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "MainStackName"
       },
       " - Demo Application"
      ]
     ]
    }
   },
   "Type": "AWS::ApiGateway::RestApi"
  },
  "ApiRootResourceIdParam": {
   "Condition": "",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "API Gateway Root Resource ID for ",
       {
        "Ref": "AWS::StackName"
       },
       " stack"
      ]
     ]
    },
    "Name": {
     "Fn::Join": [
      "",
      [
       "/",
       {
        "Ref": "MainStackName"
       },
       "/",
       "ApiRootResourceId"
      ]
     ]
    },
    "Tier": "Standard",
    "Type": "String",
    "Value": {
     "Fn::GetAtt": [
      "Api",
      "RootResourceId"
     ]
    }
   },
   "Type": "AWS::SSM::Parameter"
  },
  "CognitoAuthorizer": {
   "Properties": {
    "IdentitySource": "method.request.header.Authorization",
    "Name": "Cognito-User-Pool",
    "ProviderARNs": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":cognito-idp:",
        {
         "Ref": "AWS::Region"
        },
        ":",
        {
         "Ref": "AWS::AccountId"
        },
        ":userpool/",
        {
         "Fn::Join": [
          "",
          [
           "{{resolve:ssm:/",
           {
            "Ref": "MainStackName"
           },
           "/CognitoUserPoolId}}"
          ]
         ]
        }
       ]
      ]
     }
    ],
    "RestApiId": {
     "Fn::Join": [
      "",
      [
       "{{resolve:ssm:/",
       {
        "Ref": "MainStackName"
       },
       "/DemoAppApiId}}"
      ]
     ]
    },
    "Type": "COGNITO_USER_POOLS"
   },
   "Type": "AWS::ApiGateway::Authorizer"
  },
  "CognitoAuthorizerIdParam": {
   "Condition": "",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Cognito API Authorizer ID for ",
       {
        "Ref": "AWS::StackName"
       },
       " stack"
      ]
     ]
    },
    "Name": {
     "Fn::Join": [
      "",
      [
       "/",
       {
        "Ref": "MainStackName"
       },
       "/",
       "CognitoAuthorizerId"
      ]
     ]
    },
    "Tier": "Standard",
    "Type": "String",
    "Value": {
     "Fn::GetAtt": [
      "CognitoAuthorizer",
      "AuthorizerId"
     ]
    }
   },
   "Type": "AWS::SSM::Parameter"
  },
  "DEFAULT4XXGatewayResponse": {
   "Properties": {
    "ResponseParameters": {
     "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
    },
    "ResponseType": "DEFAULT_4XX",
    "RestApiId": {
     "Ref": "Api"
    }
   },
   "Type": "AWS::ApiGateway::GatewayResponse"
  },
  "DEFAULT5XXGatewayResponse": {
   "Properties": {
    "ResponseParameters": {
     "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
    },
    "ResponseType": "DEFAULT_5XX",
    "RestApiId": {
     "Ref": "Api"
    }
   },
   "Type": "AWS::ApiGateway::GatewayResponse"
  },
  "DemoAppApiIdParam": {
   "Condition": "",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "API Gateway ID for ",
       {
        "Ref": "AWS::StackName"
       },
       " stack"
      ]
     ]
    },
    "Name": {
     "Fn::Join": [
      "",
      [
       "/",
       {
        "Ref": "MainStackName"
       },
       "/",
       "DemoAppApiId"
      ]
     ]
    },
    "Tier": "Standard",
    "Type": "String",
    "Value": {
     "Ref": "Api"
    }
   },
   "Type": "AWS::SSM::Parameter"
  }
 }
}